<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package}.dao.${className}Dao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="${package}.model.${className}" id="${classname}Map" />

    <sql id="BaseColumn">
#foreach($column in $columns)
#if($velocityCount != $columns.size())
		${column.columnName} as ${column.attrname},
#else
		${column.columnName} as ${column.attrname}
#end
#end
    </sql>

	<sql id="BasWhere">
		<where>
#foreach($column in $columns)
#if($column.attrType == 'String')
			<if test="${column.attrname} != null and ${column.attrname} != ''">
				and ${column.columnName} = #{${column.attrname}}
			</if>
#else
			<if test="${column.attrname} != null">
				and ${column.columnName} = #{${column.attrname}}
			</if>
#end
#end
        </where>
	</sql>

    <insert id="save" parameterType="${package}.model.${className}"#if($pk.extra == 'auto_increment') useGeneratedKeys="true" keyProperty="$pk.attrname"#end>
        insert into ${tableName}
        (
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
			`$column.columnName`#if($velocityCount != $columns.size()), #end

#end
#end
        )
        values
        (
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
			#{$column.attrname}#if($velocityCount != $columns.size()), #end

#end
#end
        )
    </insert>

    <insert id="saveBatch" parameterType="${package}.model.${className}"#if($pk.extra == 'auto_increment') useGeneratedKeys="true" keyProperty="$pk.attrname"#end>
        insert into ${tableName}
        (
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
			`$column.columnName`#if($velocityCount != $columns.size()), #end

#end
#end
        )
        values
        <foreach item="${classname}" collection="list" separator=",">
        (
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
			#{${classname}.$column.attrname}#if($velocityCount != $columns.size()), #end

#end
#end
        )
		</foreach>
    </insert>

	<update id="update" parameterType="${package}.model.${className}">
		update ${tableName} 
		<set>
#foreach($column in $columns)
#if($column.columnName != $pk.columnName)
			<if test="$column.attrname != null">`$column.columnName` = #{$column.attrname}#if($velocityCount != $columns.size()), #end</if>
#end
#end
		</set>
		where ${pk.columnName} = #{${pk.attrname}}
	</update>
	
	<delete id="delete">
		delete from ${tableName} where ${pk.columnName} = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from ${tableName} where ${pk.columnName} in 
		<foreach item="${pk.attrname}" collection="list" open="(" separator="," close=")">
			#{${pk.attrname}}
		</foreach>
	</delete>

    <select id="findById" resultMap="${classname}Map">
        select
		<include refid="BaseColumn"/>
        from ${tableName} where ${pk.columnName} = #{value}
    </select>

    <select id="findPageInfo" resultMap="${classname}Map">
        select
		<include refid="BaseColumn"/>
        from ${tableName}
		<include refid="BasWhere"/>
		<if test="orderColumn != null and order != null">
            order by ${orderColumn} ${order}
		</if>
    </select>

    <select id="countTotal" resultType="long">
        select count(1) from ${tableName}
        <include refid="BasWhere"/>
    </select>

</mapper>