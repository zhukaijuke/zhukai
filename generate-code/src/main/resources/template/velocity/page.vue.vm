<!-- generated by ${author} -->
<template>
  <div class="o-manage c-container">
    <!-- 查询 -->
    <header class="c-header">
      <el-collapse @change="handleChange">
        <el-collapse-item :title="searchArr" name="1">
          <el-form :model="queryCondition" ref="queryCondition" label-position="left">
#set($rowCount=1)
#set($flag=true)
#foreach($column in $extColumns)
#if($rowCount % 4 == 1)

            <!-- 一行 -->
            <el-row type="flex" align="middle" justify="start">
#end
#if($column.attrname == "status")
              <el-col :span="6">
                <el-form-item class="c-query-select" label="状态" prop="status">
                  <el-select v-model="queryCondition.status" clearable placeholder="请选择">
                    <el-option v-for="item in statusList" :label="item.displayValueCn" :value="item.dataCode"
                               :key="item.dataCode"></el-option>
                  </el-select>
                </el-form-item>
              </el-col>
#elseif($column.attrType == "Date")
              <el-col :span="6">
                <el-form-item class="c-query-input" label="${column.comments}" prop="${column.attrname}">
                  <el-date-picker v-model="queryCondition.${column.attrname}" placeholder="选择日期时间" type="date" />
                </el-form-item>
              </el-col>
#else
              <el-col :span="6">
                <el-form-item class="c-query-input" label="${column.comments}" prop="${column.attrname}">
                  <el-input v-model="queryCondition.${column.attrname}" placeholder="请输入${column.comments}" clearable></el-input>
                </el-form-item>
              </el-col>
#end
#if($rowCount != 1 && $rowCount % 4 == 0 && $velocityCount != $extColumns.size())
            </el-row>
#end
#set($rowCount=$rowCount+1)
#if($velocityCount == $extColumns.size())
            </el-row>
#end
#end

            <!-- 查询按钮行 -->
            <el-row type="flex" align="middle" justify="end">
              <el-col :span="24" class="c-query-input">
                <div class="f-right">
                  <el-button type="primary" @click="searchForm('queryCondition')">查询</el-button>
                  <el-button class="c-button__default" @click="resetForm('queryCondition')">重置</el-button>
                </div>
              </el-col>
            </el-row>
          </el-form>
        </el-collapse-item>
      </el-collapse>
    </header>

    <div class="c-content clearfix">
      <!-- 页面按钮 -->
      <div class="c3-btn">
        <el-button class="c-button__default" icon="el-icon-circle-plus" @click="createShowPage">新增</el-button>
        <el-button class="c-button__default" icon="el-icon-success"
                   @click="activeStatusBatch" :disabled="disabled.deleteBtn">生效</el-button>
        <el-button class="c-button__default" icon="el-icon-error"
                   @click="disabledStatusBatch" :disabled="disabled.deleteBtn">失效</el-button>
      </div>

      <!-- table 数据展示 -->
      <div>
        <el-table :data="tableData" style="width: 100%" @selection-change="handleSelectionChange">
          <el-table-column fixed="left" type="selection"></el-table-column>
          <el-table-column fixed="left" label="操作" width="150" align="center">
#if($hasStatus)
            <template slot-scope="scope">
              <template v-if="scope.row.status === 'disabled'">
                <el-button type="text" class="tcenter" icon="el-icon-success"
                           @click="activeStatus(scope.row.id)">生效</el-button>
              </template>
              <template v-else>
                <el-button type="text" class="tcenter" style="color: #cf9236" icon="el-icon-error"
                           @click="disabledStatus(scope.row.id)">失效</el-button>
              </template>
#end
              <el-button type="text" class="tcenter" icon="el-icon-edit" @click="editShowPage(scope.row)">编辑</el-button>
            </template>
          </el-table-column>
#foreach($column in $columns)
#if($column.attrname != "id"
    && $column.attrname != "recordVersion"
    && $column.attrname != "createUserCode"
    && $column.attrname != "lastUpdDate"
    && $column.attrname != "lastUpdUserCode"
    && $column.attrname != "lastUpdUserName")
#if($column.attrname == "status")
          <el-table-column label="状态" width="100" prop="status" align="center" show-overflow-tooltip>
            <template slot-scope="scope">
              <span :style='scope.row.status === "disabled" ? {color: "red"} : {color: "green"}'
                    v-dictionary="{'dictType':'BaseStatus','dictValue':scope.row.status}"></span>
            </template>
          </el-table-column>
#elseif($column.attrType == "Date")
          <el-table-column label="${column.comments}" width="180" prop="${column.attrname}" :formatter="formatDate" align="center" show-overflow-tooltip></el-table-column>
#else
          <el-table-column label="${column.comments}" width="150" prop="${column.attrname}" align="center" show-overflow-tooltip></el-table-column>
#end
#end
#end
        </el-table>
      </div>
      <!-- 分页 -->
      <div class="block">
        <el-pagination background
                       @size-change="handleSizeChange"
                       @current-change="handleCurrentChange"
                       :current-page="pageRequest.pageNo"
                       :page-sizes="[10, 20, 30, 50]"
                       :page-size="pageRequest.pageSize"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="pageRequest.total">
        </el-pagination>
      </div>

      <!-- 新增和查看修改模态框 -->
      <el-dialog :title="editDialogTitle" :visible.sync="editDialogVisible">
        <el-form :model="${classname}Form" status-icon label-width="120px" :rules="rules" ref="${classname}Form">
          <el-form-item label="ID" prop="id" hidden>
            <el-input v-model="${classname}Form.id"></el-input>
          </el-form-item>
#set($dataCount=1)
#foreach($column in $extColumns)
#if($dataCount % 2 == 1)
              <!-- 一行 -->
            <el-row type="flex" class="row-bg">
#end
#if($column.attrname == "status")
              <el-col :span="12">
                <el-form-item label="状态" prop="status">
                  <el-select v-model="${classname}Form.status" clearable placeholder="请选择" style="width: 100%">
                    <el-option v-for="item in statusList" :label="item.displayValueCn" :value="item.dataCode"
                               :key="item.dataCode"></el-option>
                  </el-select>
                </el-form-item>
              </el-col>
#elseif($column.attrType == "Date")
              <el-col :span="12">
                <el-form-item label="${column.comments}" prop="${column.attrname}">
                  <el-date-picker
                    v-model="${classname}Form.${column.attrname}"
                    type="datetime"
                    format="yyyy-MM-dd HH:mm:ss"
                    placeholder="选择日期时间">
                  </el-date-picker>
                </el-form-item>
              </el-col>
#elseif($column.attrType == "Integer"
  || $column.attrType == "Long"
  || $column.attrType == "Float"
  || $column.attrType == "BigDecimal"
  || $column.attrType == "Double")
              <el-col :span="12">
                <el-form-item label="${column.comments}" prop="${column.attrname}">
                  <el-input v-model.number="${classname}Form.${column.attrname}"></el-input>
                </el-form-item>
              </el-col>
#else
              <el-col :span="12">
                <el-form-item label="${column.comments}" prop="${column.attrname}">
                  <el-input v-model="${classname}Form.${column.attrname}"></el-input>
                </el-form-item>
              </el-col>
#end
#if($dataCount != 1 && $dataCount % 2 == 0 && $velocityCount != $extColumns.size())
            </el-row>
#end
#set($dataCount=$dataCount+1)
#if($velocityCount == $extColumns.size())
              </el-row>
#end
#end
        </el-form>
        <div slot="footer">
          <el-button @click="editDialogVisible = false">取 消</el-button>
          <el-button type="primary" @click="submitSaveOrUpdate">确 定</el-button>
        </div>
      </el-dialog>
    </div>
  </div>
</template>

<script>
  import dictionary from '@/directive/dictionary/index.js'
  import util from '../../../utils/util'
  import api from '../../../api/api'

  export default {
    name: '${classname}Page',
    directives: {dictionary},
    data() {
      return {
        searchArr: '展开搜索',
        editDialogTitle: '',
        editDialogVisible: false,
        ${classname}Form: {},
        disabled: {
          deleteBtn: true
        },
        tableData: [],
#if(${hasStatus})
        statusList: [],
#end
        multipleSelection: [],
        total: 0,
        listLoading: true,
        queryCondition: {},
        pageRequest: api.crud.getQueryCondition(),
        // 自定义校验规则
        rules: {
#foreach($column in $extColumns)
#if($column.attrType == "Integer"
    || $column.attrType == "Long"
    || $column.attrType == "Float"
    || $column.attrType == "BigDecimal"
    || $column.attrType == "Double")
          $column.attrname: [
            { required: true, message: '请输入${column.comments}', trigger: 'blur' },
            { type: 'number', message: '${column.comments}必须为数字值', trigger: 'blur' }
          ]#if($velocityCount != $extColumns.size()),
#else

#end
#else
          $column.attrname: [
            { required: true, message: '请输入${column.comments}', trigger: 'blur' }
          ]#if($velocityCount != $extColumns.size()),
#else

#end
#end
#end
        }
      }
    },
    created() {
#if(${hasStatus})
      this.statusList = util.dictDataList('BaseStatus');
#end
      this.getList();
    },
    methods: {
      // 搜索展开
      handleChange(val) {
        this.searchArr = this.searchArr === '收起搜索' ? '展开搜索' : '收起搜索';
      },
      handleSelectionChange(val) {
        this.multipleSelection = val;
        this.disabled.deleteBtn = this.multipleSelection.length === 0;
      },
      // 查询
      searchForm() {
        this.pageRequest = api.crud.getQueryCondition();
        this.getList();
      },
      // 重置
      resetForm() {
        this.queryCondition = {};
      },
      getList() {
        const self = this;
        const queryCondition = JSON.parse(JSON.stringify(
          Object.assign(
            {'group_name': '${classname}Service', 'method_name': 'findPage'},
            this.queryCondition,
            this.pageRequest)));
        api.ApiGatewayService.gateway({
          type: 'GET',
          data: queryCondition,
          success: (response) => {
            if (response) {
              self.tableData = response.data;
              self.pageRequest = api.crud.getCurrentPage(response);
            } else {
              self.$message.error('出现异常了, 请重试或联系IT');
            }
          }
        });
      },
      // 设置PageSize
      handleSizeChange(val) {
        this.pageRequest.pageSize = val;
        this.getList();
      },
      // 设置第几页
      handleCurrentChange(val) {
        this.pageRequest.pageNo = val;
        this.getList();
      },
      // 打开新增窗口
      createShowPage() {
        const self = this;
        self.editDialogTitle = '新增${comments}';
        self.editDialogVisible = true;
        self.$nextTick(() => {
          self.${classname}Form = {};
          self.$refs.${classname}Form.clearValidate();
        });
      },
      // 打开编辑窗口
      editShowPage(data) {
        const self = this;
        self.${classname}Form = util.cloneObj(data, ['createDate', 'lastUpdDate']);
        self.editDialogTitle = '修改${comments}';
        self.editDialogVisible = true;
        self.$nextTick(() => {
          self.$refs.${classname}Form.clearValidate();
        });
      },
      // 新增和修改
      submitSaveOrUpdate() {
        const self = this;
        self.$refs.${classname}Form.validate((valid) => {
          if (!valid) {
            return false;
          }
          let data = JSON.parse(JSON.stringify(
            Object.assign(
              {'group_name': '${classname}Service', 'method_name': 'saveOrUpdate'},
              self.${classname}Form
            )
          ));
          api.ApiGatewayService.gateway({
            type: 'GET',
            data: data,
            success: (response) => {
              if (response) {
                self.$message.success('保存成功');
                self.getList();
                self.editDialogVisible = false;
                self.$nextTick(() => {
                  self.${classname}Form = {};
                });
              } else {
                self.$message.error('出现异常了, 请重试或联系IT');
              }
            }
          })
        })
      },
      activeStatus(id) {
        this.updateStatus(id, 'activeStatusBatch');
      },
      disabledStatus(id) {
        this.updateStatus(id, 'disabledStatusBatch');
      },
      // 批量生效
      activeStatusBatch() {
        let selectIds = this.multipleSelection.map(function (data) {
          return data.id
        });
        this.updateStatus(selectIds.join(','), 'activeStatusBatch');
      },
      // 批量失效
      disabledStatusBatch() {
        let selectIds = this.multipleSelection.map(function (data) {
          return data.id
        });
        this.updateStatus(selectIds.join(','), 'disabledStatusBatch');
      },
      updateStatus(ids, method) {
        api.ApiGatewayService.gateway({
          type: 'GET',
          data: {
            group_name: "${classname}Service",
            method_name: method,
            ids: ids
          },
          success: (response) => {
            if (response) {
              this.$message.success('修改成功!');
              this.getList();
            } else {
              this.$message.error('出现异常了, 请重试或联系IT');
            }
          }
        })
      },
      // 格式化时间
      formatDate(row, column, cellValue, index) {
        let date = new Date(cellValue);
        return util.formatDate(date, 'yyyy-MM-dd HH:mm:ss');
      }
    }
  }
</script>

<style scoped>
  .tcenter {
    color: #19bf4f;
    cursor: pointer;
    text-align: center !important;
    min-width: 0;
    padding: 0 0px;
  }

  .el-form-item {
    margin-bottom: 20px;
  }
</style>
